version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
        - VITE_CF_CLIENT_ID=${VITE_CF_ACCESS_CLIENT_ID}
        - VITE_CF_CLIENT_SECRET=${VITE_CF_ACCESS_CLIENT_SECRET}
        - VITE_CF_ACCESS_TOKEN=${VITE_CF_ACCESS_TOKEN}
    ports:
      - "3000:3000"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/tmp:noexec,nosuid,size=100m
      - /var/cache:noexec,nosuid,size=50m
    ulimits:
      nproc: 50
      nofile:
        soft: 512
        hard: 512
    mem_limit: 512m
    cpus: 0.5
    pids_limit: 50
    environment:
      - VITE_FRONTEND_URL=${VITE_FRONTEND_URL}
      - VITE_API_URL=${VITE_API_URL}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      # Cloudflare Access Service Auth
      - VITE_CF_CLIENT_ID=${VITE_CF_ACCESS_CLIENT_ID}
      - VITE_CF_CLIENT_SECRET=${VITE_CF_ACCESS_CLIENT_SECRET}
      - VITE_CF_ACCESS_TOKEN=${VITE_CF_ACCESS_TOKEN}
    depends_on:
      - backend

  # Docker daemon container - needs privileged mode for infrastructure operations
  # SECURITY NOTE: This container has full privileges BUT does not run user code
  # User execution containers created by this daemon will be heavily restricted
  docker-daemon:
    image: docker:dind
    privileged: true  # Required for Docker-in-Docker to mount filesystems and manage kernel features
    # No additional security restrictions on daemon - it's infrastructure only
    read_only: false  # Docker daemon needs write access to its directories
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/tmp:noexec,nosuid,size=100m
    ulimits:
      nproc: 500  # Docker daemon needs more processes
      nofile:
        soft: 2048
        hard: 2048
    mem_limit: 2g  # Docker daemon needs more memory
    cpus: 2.0     # Docker daemon needs more CPU
    pids_limit: 1000  # Docker daemon manages many processes
    environment:
      - DOCKER_TLS_CERTDIR=""  # Disable TLS for simplicity
    command: ["dockerd", "--host=tcp://0.0.0.0:2376", "--host=unix:///var/run/docker.sock", "--default-ulimit", "nofile=1024:1024", "--default-ulimit", "nproc=50:50"]
    healthcheck:
      test: ["CMD", "docker", "info"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Backend API container - runs with restricted privileges
  # This container creates user execution containers via the docker-daemon
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app:ro  # Mount as read-only for security
      - /app/logs:/app/logs:rw  # Allow writes only to logs directory
    security_opt:
      - seccomp:./security/seccomp-profile.json
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
    read_only: false  # Backend needs some write access for logs and temp files
    tmpfs:
      - /tmp:noexec,nosuid,size=200m
      - /var/tmp:noexec,nosuid,size=100m
    ulimits:
      nproc: 100
      nofile:
        soft: 1024
        hard: 1024
    mem_limit: 1g
    cpus: 1.0
    pids_limit: 100
    environment:
      - DOCKER_HOST=tcp://docker-daemon:2376
      - BACKEND_URL=${BACKEND_URL}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    depends_on:
      docker-daemon:
        condition: service_healthy 